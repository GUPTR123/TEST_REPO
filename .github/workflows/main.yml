name: File Changes Information

on:
  push:
    branches: [main] # Or your main branch name

jobs:
  print_file_info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Important for getting previous commit

      - name: Get changed files
        id: changed-files
        run: |
          # Get the list of changed files between the last two commits
          CHANGED_FILES=$(git diff --name-status HEAD^ HEAD)
          echo "::set-output name=files::$CHANGED_FILES"

      - name: Print file information
        run: |
          IFS=$'\n' # Important for handling filepaths with spaces
          for line in ${{ steps.changed-files.outputs.files }}; do
            status="${line:0:1}" # Get the status (A, M, D)
            filepath="${line:2}"  # Get the filepath

            if [[ -z "$filepath" ]]; then
              continue # Skip empty lines
            fi
            
            commit_message=$(git log -1 --pretty=%B "$filepath")
            created_at=$(git log --format=%aI -n 1 -- "$filepath")
            created_by=$(git log --format="%ae" -n 1 -- "$filepath")
            

            echo "{"
            echo "  \"filepath\": \"$filepath\","
            echo "  \"created_at\": \"$created_at\","
            echo "  \"created_by\": \"$created_by\","
            echo "  \"commit_message\": \"$commit_message\","
            
            if [[ "$status" == "A" ]]; then
              echo "  \"change_type\": \"File Added\""
            elif [[ "$status" == "M" ]]; then
              echo "  \"change_type\": \"File Updated\""
            elif [[ "$status" == "D" ]]; then
              echo "  \"change_type\": \"File Deleted\""
            fi
            echo "},"
          done
