name: File Change Logger

on:
  push:
    branches:
      - main  # Adjust the branch as needed

jobs:
  log-file-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch commit details
        id: commit_info
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          AUTHOR_NAME=$(git log -1 --pretty=format:'%an' $COMMIT_HASH)
          COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s' $COMMIT_HASH)
          DATE=$(git log -1 --pretty=format:'%ad' --date=iso $COMMIT_HASH)

          # Get details for added, modified, and deleted files
          ADDED=$(git diff-tree --no-commit-id --name-status -r $COMMIT_HASH | grep '^A' || true)
          MODIFIED=$(git diff-tree --no-commit-id --name-status -r $COMMIT_HASH | grep '^M' || true)
          DELETED=$(git diff-tree --no-commit-id --name-status -r $COMMIT_HASH | grep '^D' || true)

          # Print the details in a combined format
          echo "Combined File Changes:" > file_changes.log

          if [ -n "$ADDED" ]; then
            echo "$ADDED" | while read -r LINE; do
              FILE=$(echo "$LINE" | awk '{print $2}')
              echo "{\"filepath\": \"$FILE\", \"created_at\": \"$DATE\", \"created_by\": \"$AUTHOR_NAME\", \"commit_message\": \"$COMMIT_MESSAGE\", \"status\": \"File Added\"}" >> file_changes.log
            done
          fi

          if [ -n "$MODIFIED" ]; then
            echo "$MODIFIED" | while read -r LINE; do
              FILE=$(echo "$LINE" | awk '{print $2}')
              echo "{\"filepath\": \"$FILE\", \"created_at\": \"$DATE\", \"created_by\": \"$AUTHOR_NAME\", \"commit_message\": \"$COMMIT_MESSAGE\", \"status\": \"File Updated\"}" >> file_changes.log
            done
          fi

          if [ -n "$DELETED" ]; then
            echo "$DELETED" | while read -r LINE; do
              FILE=$(echo "$LINE" | awk '{print $2}')
              echo "{\"filepath\": \"$FILE\", \"created_at\": \"$DATE\", \"created_by\": \"$AUTHOR_NAME\", \"commit_message\": \"$COMMIT_MESSAGE\", \"status\": \"File Deleted\"}" >> file_changes.log
            done
          fi

      - name: Print File Changes
        run: |
          cat file_changes.log
